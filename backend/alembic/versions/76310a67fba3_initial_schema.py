"""Initial schema

Revision ID: 76310a67fba3
Revises: 
Create Date: 2025-08-07 10:05:11.087391

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '76310a67fba3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hrga', sa.Text(), nullable=False),
    sa.Column('default_focus_block_duration', sa.Integer(), nullable=False),
    sa.Column('registered_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('ai_coaching_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_text', sa.Text(), nullable=False),
    sa.Column('ai_feedback', sa.Text(), nullable=False),
    sa.Column('coaching_trigger', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_coaching_logs_id'), 'ai_coaching_logs', ['id'], unique=False)
    op.create_table('daily_intentions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('daily_intention_text', sa.Text(), nullable=False),
    sa.Column('target_quantity', sa.Integer(), nullable=False),
    sa.Column('completed_quantity', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('focus_block_count', sa.Integer(), nullable=False),
    sa.Column('ai_feedback', sa.Text(), nullable=True),
    sa.Column('user_response_to_ai_feedback', sa.Text(), nullable=True),
    sa.Column('user_agreed_with_ai', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_intentions_created_at'), 'daily_intentions', ['created_at'], unique=False)
    op.create_index(op.f('ix_daily_intentions_id'), 'daily_intentions', ['id'], unique=False)
    op.create_table('user_auth',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('daily_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('daily_intention_id', sa.Integer(), nullable=False),
    sa.Column('succeeded_failed', sa.Boolean(), nullable=False),
    sa.Column('ai_feedback', sa.Text(), nullable=True),
    sa.Column('user_confirmation_correction', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('recovery_quest', sa.Text(), nullable=True),
    sa.Column('recovery_quest_type', sa.String(length=20), nullable=False),
    sa.Column('recovery_quest_response', sa.Text(), nullable=True),
    sa.Column('recovery_quest_completed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['daily_intention_id'], ['daily_intentions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_results_id'), 'daily_results', ['id'], unique=False)
    op.create_table('focus_blocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('daily_intention_id', sa.Integer(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('focus_block_intention', sa.Text(), nullable=False),
    sa.Column('pre_block_video_url', sa.String(length=2048), nullable=True),
    sa.Column('post_block_video_url', sa.String(length=2048), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['daily_intention_id'], ['daily_intentions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('focus_blocks')
    op.drop_index(op.f('ix_daily_results_id'), table_name='daily_results')
    op.drop_table('daily_results')
    op.drop_table('user_auth')
    op.drop_index(op.f('ix_daily_intentions_id'), table_name='daily_intentions')
    op.drop_index(op.f('ix_daily_intentions_created_at'), table_name='daily_intentions')
    op.drop_table('daily_intentions')
    op.drop_index(op.f('ix_ai_coaching_logs_id'), table_name='ai_coaching_logs')
    op.drop_table('ai_coaching_logs')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
